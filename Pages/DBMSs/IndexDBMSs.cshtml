@page
@model SRA.Pages.DBMSs.IndexModel


@{
    ViewData["Title"] = "Index";
}

<h2>Elenco Basi di dati</h2>

<p>
    <button type="button" class="bottone bottone1" data-toggle="ajax-modal-aggdbms">
        Aggiungi
    </button>
</p>
<table id="tbldbmss" class="display table table-hover table-striped table-bordered table-sm display" style="width:100%" ">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DBMSs[0].Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DBMSs[0].Versione)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DBMSs[0].Produttore)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DBMSs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelitem => item.Versione)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Produttore)
                </td>
                <td>
                    <button type="button" class="bottone bottone1" data-toggle="ajax-modal-moddbms" data-iddbms="@item.ID">
                        Modifica
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal placeholder -->
<div id="modal-placeholder-dbmss"></div>


@section Scripts {
    <script>

        $(document).ready(function () {
            $('#tbldbmss').DataTable({
                // Opzioni di configurazione
                paging: false,          // Abilita la paginazione
                searching: true,       // Abilita la ricerca
                ordering: true
            }
            );
                // Definisci il tipo di ordinamento personalizzato
        $.fn.dataTable.ext.order['dom-checkbox'] = function(settings, col) {
            return this.api().column(col, {order: 'index'}).nodes().map(function(td, i) {
                return $(td).data('order');
            });
        };
        });


        $(function () {
            var placeholderElement = $('#modal-placeholder-dbmss');
            $('button[data-toggle="ajax-modal-aggdbms"]').click(function (event) {
                var geturl = `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}`;
                var urldettaglio = '/DBMSs/IndexDBMSs?handler=AggiungiModalePartial';
                geturl += urldettaglio;

                $.get(geturl).done(function (data) {
                    // append HTML to document, find modal and show it
                    //$(document.body).append(data).find('.modal').modal('show');
                    placeholderElement.html(data);
                    placeholderElement.find('.modal').modal('show');
                });
            });
        });

        $(function () {
            var placeholderElement = $('#modal-placeholder-dbmss');
            $('button[data-toggle="ajax-modal-moddbms"]').click(function (event) {
                var geturl = `${window.location.protocol}//${window.location.hostname}${window.location.port ? `:${window.location.port}` : ''}`;
                var urldettaglio = '/DBMSs/IndexDBMSs?handler=AggiungiModalePartial';
                geturl += urldettaglio;
                const iddbms = $(this).attr('data-iddbms');
                geturl += "&iddbms=";
                geturl += iddbms;

                $.get(geturl).done(function (data) {
                    // append HTML to document, find modal and show it
                    //$(document.body).append(data).find('.modal').modal('show');
                    placeholderElement.html(data);
                    placeholderElement.find('.modal').modal('show');
                });
            });
        });

    </script>
}